* Code (general Julia)
** TODO Check arguments order in functions
** TODO Read "Eval of julia code"
** Fields in Arrays [1/1]
   - [X] element-wise change is not possible for arrays nor dict of mutable structs: ONLY POSSIBLE IF STRUCTS ARE BUILT INDIVIDUALLY: NO FILL!!
** TODO check necessity new() in structs 

* main.jl
*** TODO test *simulate()* for reading and creating initial conditions
** Unity tests

* Fileprep.jl
** DONE *lengthstocell()* and *areatocell* convert/calculates real fragment sizes to grid cell side lengths CLOSED: <2018-03-02 Fr>
** TODO *out_landscape()* prepare output that characterize output for both unity tests and visualization
   DEADLINE: <2018-03-18 So> SCHEDULED: <2018-03-14 Mi>
- [ ] individuals information
- [ ] interaction matrix (*pollination!()*)
- [ ] Temperature & precipitation: German weather station (South station in Göttingen is quite representative) and Kathrin, from EU climate project, with more micro scale measurements, on a subset of the fragments
- [ ] Species temperature and optimum temperature and precipitation values 
* Parametrization
  DEADLINE: <2018-03-27 Di> SCHEDULED: <2018-03-14 Mi>
- [ ] Trait values:  LEDA database, Annetta Leinjärtner, Bernhard Hoiß
Type of data: Annual/perennial, dispersal mode, dispersal parameters, seed mass, seed number, 
  - [ ] herbs: LEDA/TRY, LEDA probably more uniform
  - [ ] butterflies: Jochen
  - [ ] bees:
- [ ] Clustering analysis for functional groups
- [ ] Interactions data: Ingo Grass paper
- [ ] 
* Setworld.jl
*** DONE Create multi fragment landscape structure (not simulated yet) 
*** DONE Whole fragment is getting the same temperature and preciptation
    - [X] because assignment of one field changes all the fields of the array!
*** DONE Change names so that temperature and preciptation can be called niche dimensions: no need
*** TODO Initialize
    DEADLINE: <2018-03-02 Fr>
*readinlandscp* Initial landscape conditions are read from *landscpinit* file and stored in Dict: so far, *read_initials()* is doing it
*landscape_init()* create landscape with WHICH DIMENSIONS?
- Reshaping in landscape should use max fragment dimensions? For square fragments, easy, but if shape varies, it is problematic.
- Find another type of structure to hold the landscape structure OR use a 1D array, and elaborate an indexation to identify x,y and frag? 
  -> Inside the fragments loop, reshape each fragment and append it to some 3D structure?
*** Change during simulation
DEADLINE: <2018-03-02 Fr>
*update_landscape!* changes the dictionnary values
*** TODO create landscapes wiht n_frags > 1

* Organisms.jl
Initialization spreads organisms in the landscape (fragments, later): newOrg() is called
During simulation, after reproduction (and dispersion?) new organisms will only establish once it has checked local grid viability and fitness values?
** MTE rates to individual probabilites
** TODO mutable struct [1/5]
   SCHEDULED: <2018-03-14 Mi>
- [ ] .sex field, for controlling sex-ratio, for insects
- [ ] Genotype must control some traits
- [ ] Traits should match for interaction to happen. Microevolutionary change would cause traits to (mis)match
- [X] Biomass is a dictionary with compartments that get the allocations (vegetative and reproductive masses)
- [ ] Genotype defines species?
- [ ] Interaction field: Plants have a list of visitors and pollinators have a list of IDs of pollen. Pollen decay should eliminate pollen after certain time step.
  - [ ] verify pollen decay
*** TODO Define/Justify Organism characterization: how broad is it going to be?
Main attribute: It must be able to represent plants and insects.
   DEADLINE: <2018-03-14 Mi> SCHEDULED: <2018-03-14 Mi>
** TODO use length(orgs) for IDcounter 
   SCHEDULED: <2018-03-15 Do>
** DONE Simulate single plant species/functional group [3/3] :initialization:
Organisms are stored in an array of n_frags (read from simulation file). All organisms are stored in this array and are updated together (each fragment - it could be possible to have simulations where there is some desynchronization between fragments!).
*newOrg()* will have multiple methods: One for initialization, where individuals always establish and another where it depends on the individuals fitness in the grid and establishment!() is called.  
 - [X] Initialize a certain number of organisms
   - [X] get fct types and abundances from input file
   - [X] create orgs somewhere ('organisms' Array)
   - [X] properly index individuals in the WordCell landscape
     - [X] create bunch of locations and draw from them <2018-02-21 Mi>
     - [X] all cells get the same quantity (init_abund) of organisms, the locations are rdm, though. The loop inside XYs is causing it. --> because the *landscape.orgs* field was initialized with empty orgs, *push!()* would add the same orgs to  all the cells! Individuals are now stored in *orgs* array, instead. Even ig that is not the real problem, it makes indexation easier <2018-02-22 Do>
     - [X] create different arrays for different fct groups: <2018-02-23 Fr> For now, not necessary, as functional group should be available as field of orgs array.
 - [X] correct IDcounter: global in Organisms module, exported and called in newOrgs!()
 - [X] check ERROR with method on function newOrgs(): why push! nao funciona? Because all arry's contents had been initialized at the same time <2018-02-26 Mo>.
 - [ ] Simulate single functional group
   - [ ] clonal reproduction
   - [ ] wind reproduction (see *reproduction()*)
 - [ ] 
** TODO Create organisms of different functional groups
During initialization, one input file gives the functional types and their initial abundances, vegmass, reprodmass
- [ ] input file format
*** OrgsRef format: how the program stores that information?
- [ ] Organize dummy data in the ideal input/reference format
   DEADLINE: <2018-03-15 Do>
*** OrgsRef: [1/2] 
- [ ] come up with structure (dict or composite type) to store the parameters of different species/fgroups, instead of tables?
- [X] How to store multiple types of organisms: single array. Might be necessary to chage it, if calling specific fct types reveals itself to be important and can't be done otherwise
- Eventhough they are more rigid, structs are easier to call and the fields have more flexibility to store different kinds of information on the functional group parameters 
** Life-cycle
*** TODO Compete [2/4]
 Competition is biomass-based: overlap of area gives rise to *compterm* that penalizes growth
 - [ ] Vegetative biomass is projected to calculate competition: *compterm* = 
 - [ ] The landscape cell has a maximum biomass of each *fgroup* it can sustain. If that max is attained, the organism in question DOES WHAT? HOW IT CAN BE PENALIZED?
 - [X] Initialize a 'competition landscape' for the plants: *.neighs* field in the landscape holds a dictionnary with sum of biomass projected by each individual of a functional group
 - [X] Competition arises form growth rate being penalized by overlapping  
*** DONE Growth
    Inside allocation, calculated according to MTE 
*** Allocation [1/2]
 Parameters values might be specific to each functional group, but general mechanism must be the same:
 *REFERENCES*:
 -Irlich et al. 2009: Why MTE doenst fit for insect
 - Wenk & Falster 2015:Reproductive allocation schedules in plants -> Find something similar for insects
 - Janczur: Good model of allocation (general)
 - Weiß & Jeltsch 2015: ZOI
 - Weiner et al. 2001: Plant growth
 - Lin et al. J of Ecol. 2012: MTE for plants and interaction
 - Nestel et al. J Insect Physiol. 2016: Resource allocation in insects
 - Boggs Func. Ecol. 2009: Review 
 - For insects, nutrient allocation is a function of AGE & SEX (Boggs Func. Ecol. 2009)
     DEADLINE: <2018-03-02 Fr>
 - [X] Divide biomass GAIN according to allocation to survival, growth and reproduction. The allocation will depend on the stage:
   - [X] *allocation()* sorts things into the individual's *biomass Dictionnary* 
   - [X] *allocation()* disentangled from *survive!()*, which is based on whole bady mass:
 The MTE is based on dry weights, which means that underlying energetic budget doesn't need to be taking into account if the most important functions in the model (growth and reprodction), can be modelled via the biomass allocated to those structures. Other life-history traits, such as survival, will depend on the resulting total biomass. *Resistance structures are NOT being taken into account*, any accumulatiion of biomass should reflect in the mass-dependent survival function. 
   - juvenile: gain goes to growth
   - adult: gain goes to reproduction during reproductive phase
   For _embryos_:
   Only consume biomass
   For _juveniles_:
   *growth*
   For _adults_:
   *reprod* = (1-surv) -> Only exists during reproductive season, controlled by *age* and *fgroup* (gives the duration of reproductive season)
 - [ ] Biomass GAIN depends on competition: normalize *compterm* 
 - [ ] The allocation rules should give rise to the appropriate growth curve(von Bertalanfy for insects, for example)
*** Update organisms: [0/2]
  - [ ] Simultaneous or independent update?
  - [ ] Consider making a mutable struct where each field stores the individuals of a functional group, therefore, when updating the organisms, I wouldn't have to go through all of them, just through the group affected by the function in question
*** TODO Adjust initial abundance to realistic observed densities
*** TODO Check MTE units!!!
*** Reproduction [1/1]
- [X] fertility is calculated according to MTE, which depends on TOTAL biomass: The allocation of biomass to reproduction and growth allows controlling competition, and the rates are affected indirectly, if competition decreases due to total biomass reduction due to competition or herbivory.
- [ ] sort out different kinds of reproduction: clonal, wind and animal pollination
****  Decide on newOrgs!() is called between reproduction and establishment: Are new individuals created right after reproduction?
** Dispersal
- [ ] Connectivity matrix: 
  - [ ] Eucledian distances
- [ ] Sort out Saura & Pascual-Hortal's probability of connectivity(landscape property) and dispersal kernel (organism property): there might not be a way of combining, since they are properties of different entities.
[[https://www.researchgate.net/post/Which_connectivity_index_should_I_use_to_compare_different_networks_of_protected_areas][connectivity_discussion]] Probability of connectivity
*** Density-independent mortality 
*** Inter-specific interactions
**** TODO Interactions modelled "by" the *outcomes* (Tikhonov et al. 2017, Spiesman & Inouye 2014) 8[0/1]
  - [ ] Is it possible to integrate interaction outcomes and MTE? The patterns would lead to enregy flux across community levels
*** Pollination
- [ ] PollCell is a "pollination landscape cell" that stores 
**** Attraction of reproductive areas: Visitation frequency as a measure of attraction and/or patch flower density as a quadratic function with an optimum (if too high, there are dillution effects)
**** "Register" visit on interaction matrix and on both plant and insect
**** ENERGY TRANFERS
** Evolutionary dynamics
Juliano's suggestion: Create a function of trait distribution change depending on abundance or temperature, so that the time 
* Observation model
*Different from Virtual Ecologist approach* : OM always exists, VE verifies parametrization algorithm and data sampling method
** Hierarchical model for estimating true abundances from count data?
 - How VE verification of sampling method and this hierarchical model?
* DOCUMENTATION
*** TODO Update TRACE
